1.为什么tcp连接需要三次握手,两次不可以吗,为什么

确认双方的通信能力：
在进行数据传输之前，双方需要确认彼此的通信能力。客户端发起连接请求，服务器回应确认，再由客户端发送确认，这样可以确保双方的通信能力正常。

避免旧连接的延迟影响：
如果只有两次握手，客户端发送连接请求，但该请求在网络中被延迟，可能由于网络拥塞或其他原因导致延迟。此时，客户端可能会认为连接已建立，但服务器并不知情。当客户端再次发送数据时，服务器可能会拒绝或丢弃这些数据，因为它并没有建立有效的连接。通过引入第三次握手，可以避免旧连接的影响，确保客户端和服务器都知道连接已成功建立。

防止重复连接的建立：
如果只有两次握手，客户端发送连接请求，但在网络中由于某种原因延迟。此时，客户端可能认为连接未建立，因此发送新的连接请求。如果服务器接收到了两个连接请求，并回应确认，就会建立两个相互独立的连接。这可能导致资源浪费和数据混乱。通过引入第三次握手，可以确保服务器收到重复的连接请求时能够正确处理，避免重复连接的建立。


2.输入网址到显示网页经过了哪些过程

1.）DNS解析(Domain Name System Resolution)
浏览器首先将输入的网址发送给DNS服务器，以获取网址对应的IP地址。DNS服务器将网址解析为对应的IP地址。

2.）TCP连接(Transmission Control Protocol)
浏览器使用获取到的IP地址与Web服务器建立TCP连接。TCP连接确保数据的可靠传输。

3.）发送HTTP请求
一旦TCP连接建立成功，浏览器会向Web服务器发送HTTP请求。HTTP请求包含了请求的类型(GET、POST等)、路径、头部信息以及其他参数。

4.）服务器处理请求
Web服务器接收到浏览器发送的HTTP请求后，根据请求的内容进行处理。服务器可能会读取文件、查询数据库或执行其他操作来生成需要的网页内容。

5.）服务器发送响应
Web服务器生成响应内容，并以HTTP响应的形式发送回浏览器。响应包含了响应的状态码(例如200表示成功、404表示页面未找到等)、头部信息以及响应的内容。

6.）接收响应
浏览器接收到服务器发送的HTTP响应后，开始接收响应的内容。响应的内容通常是HTML、CSS、JavaScript等文件。

7.）解析文档
浏览器对接收到的HTML文档进行解析，构建DOM(Document Object Model)树，这是由HTML标记构成的树形结构，表示网页的结构和内容。

8.）加载资源
浏览器解析HTML文档时，如果遇到外部资源(例如CSS、JavaScript、图像等)，会发送额外的HTTP请求来获取这些资源。

9.）渲染页面
浏览器根据构建好的DOM树和CSS样式信息，将网页内容渲染到用户的屏幕上。这包括布局、绘制文本、应用样式等过程。

10.）执行JavaScript
如果HTML文档中包含JavaScript代码，浏览器会执行这些代码，以添加交互性和动态效果到页面上。

11.）加载完成
当所有资源都加载完成，页面渲染完毕后，网页加载过程就完成了。


3.七层网络协议工作原理

4.一句英文，如何将里面的单词一个个输出（考察split和join函数的应用）

5.get和post的区别

1）数据传输方式不同  直接拼接在url上 将数据打包到http请求体中
2）数据大小限制不同  get受限制，post一般不受限制
3）安全性不同
4）缓存机制不同
GET方法具有缓存机制。如果浏览器请求的资源已经在本地缓存中存在，浏览器将使用缓存而不是向服务器发送请求。这可以提高Web应用程序的性能。但是，如果应用程序的数据频繁变化，使用GET方法可能会导致浏览器缓存过期，从而影响性能。

POST方法没有缓存机制。每次使用POST方法发送请求时，浏览器都会向Web服务器发送请求，Web服务器也会重新处理请求。因此，POST方法的性能相对于GET方法较
5）幂等性不同

6.http和https区别

7.测试用例设计：针对生活中的电梯对应的调度算法进行测试



8.# 求N以内，能被7整除或者数字里包含7的数

def countnumber(a):
 count1 = 0

 count = 0

 for i in range(1,a+1):
    if i % 7 ==0:
        print("该数字"+str(i)+'整除7')
        count+=1

    s = str(i)
    for j in s:
       # if j.find('7')!=-1:
       if j == '7':
         print('该数字'+str(s) + '包含7')
         count1+=1
 return "整除个数:"+str(count)+ " 包含7的个数"+str(count1)
    # else:
    #     print('该数字'+str(i)+'无法给7整除')

a = int(input("please input your number:a=="))

print(countnumber(a))


9.用例设计
现有个需求，会将包含下划线的命名转换成驼峰命名的方式，比如ss_aa会转换成ssAa。请针对这个需求设计测试用例